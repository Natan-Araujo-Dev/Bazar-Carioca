// <auto-generated />
using System;
using BazarCarioca.WebAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BazarCarioca.WebAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250512173940_FluentApi_fix")]
    partial class FluentApi_fix
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("BazarCarioca.WebAPI.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<decimal>("Price")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("Stock")
                        .HasMaxLength(5)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("BazarCarioca.WebAPI.Models.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("ProductTypes");
                });

            modelBuilder.Entity("BazarCarioca.WebAPI.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("AveragePrice")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("BazarCarioca.WebAPI.Models.Shopkeeper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Shopkeepers");
                });

            modelBuilder.Entity("BazarCarioca.WebAPI.Models.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CellphoneNumber")
                        .HasMaxLength(9)
                        .HasColumnType("int");

                    b.Property<TimeOnly?>("ClosingTime")
                        .HasMaxLength(4)
                        .HasColumnType("time(6)");

                    b.Property<string>("Description")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Neighborhood")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<int?>("Number")
                        .HasMaxLength(5)
                        .HasColumnType("int");

                    b.Property<TimeOnly?>("OpeningTime")
                        .HasMaxLength(4)
                        .HasColumnType("time(6)");

                    b.Property<int>("ShopkeeperId")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("ShopkeeperId");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("BazarCarioca.WebAPI.Models.Product", b =>
                {
                    b.HasOne("BazarCarioca.WebAPI.Models.ProductType", "ProductType")
                        .WithMany("Products")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("BazarCarioca.WebAPI.Models.ProductType", b =>
                {
                    b.HasOne("BazarCarioca.WebAPI.Models.Store", "Store")
                        .WithMany("ProductTypes")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Store");
                });

            modelBuilder.Entity("BazarCarioca.WebAPI.Models.Service", b =>
                {
                    b.HasOne("BazarCarioca.WebAPI.Models.Store", "Store")
                        .WithMany("Services")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");
                });

            modelBuilder.Entity("BazarCarioca.WebAPI.Models.Store", b =>
                {
                    b.HasOne("BazarCarioca.WebAPI.Models.Shopkeeper", "Shopkeeper")
                        .WithMany("Stores")
                        .HasForeignKey("ShopkeeperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shopkeeper");
                });

            modelBuilder.Entity("BazarCarioca.WebAPI.Models.ProductType", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("BazarCarioca.WebAPI.Models.Shopkeeper", b =>
                {
                    b.Navigation("Stores");
                });

            modelBuilder.Entity("BazarCarioca.WebAPI.Models.Store", b =>
                {
                    b.Navigation("ProductTypes");

                    b.Navigation("Services");
                });
#pragma warning restore 612, 618
        }
    }
}
